drop database if exists net_benbenng_www;
create database net_benbenng_www;
create user if not exists 'siteMaster'@'%' identified by 'tz6e2nbegg';
grant all privileges on net_benbenng_www.* to 'siteMaster'@'%';
use net_benbenng_www;
create table TagCategorys ( Id int auto_increment, Name varchar(256) not null, constraint TagCategorys_Id_uindex unique (Id), constraint TagCategorys_Name_uindex unique (Name));
alter table TagCategorys add primary key (Id);
create table Tags ( Id int auto_increment, Name varchar(256) not null, CategoryId int null, constraint Tags_Id_uindex unique (Id), constraint Tags_Name_uindex unique (Name), constraint Tags_TagCategorys_Id_fk foreign key (CategoryId) references TagCategorys (Id) on update cascade on delete set null);
create index Tags_CategoryId_index on Tags (CategoryId);
alter table Tags add primary key (Id);
create table Users ( Id int auto_increment primary key, LoginName varchar(256) not null, HashedPassword varchar(256) not null, Salt varchar(256) not null, Role varchar(64) not null, constraint LoginName unique (LoginName));
create table Posts ( Id int auto_increment, Title varchar(512) not null, Content text not null, Author int null, CreatedTime datetime not null, LastEditedTime datetime not null, constraint Posts_Id_uindex unique (Id), constraint Posts_Users_Id_fk foreign key (Author) references Users (Id) on update cascade on delete set null);
create index Posts_Author_index on Posts (Author);
create index Posts_CreatedTime_index on Posts (CreatedTime);
create index Posts_LastEditedTime_index on Posts (LastEditedTime);
alter table Posts add primary key (Id);
create table Taggings( Id int auto_increment, PostId int not null, TagId int not null, constraint Taggings_Id_uindex unique (Id), constraint Taggings_Posts_Id_fk foreign key (PostId) references Posts (Id)  on update cascade on delete cascade, constraint Taggings_Tags_Id_fk foreign key (TagId) references Tags (Id)  on update cascade on delete cascade);
create index Taggings_PostId_index on Taggings (PostId);
create index Taggings_TagId_index on Taggings (TagId);
alter table Taggings add primary key (Id);
create table UserInformation( Id int not null, Email varchar(512) null, FirstName varchar(256) null, LastName varchar(256) null, LastActiveTime datetime not null, constraint UserInformation_Id_uindex unique (Id), constraint UserInformation_Users_Id_fk foreign key (Id) references Users (Id)  on update cascade on delete cascade);
alter table UserInformation add primary key (Id);
create index Users_LoginName_index on Users (LoginName);